#!/bin/bash

#read posted param 
input=`dd bs=${CONTENT_LENGTH} 2>/dev/null | cat -`
authkey="%%authkey"
exchange_token_uri="https://oauth2.googleapis.com/token"
user_info_req_uri="https://www.googleapis.com/oauth2/v1/userinfo?"
redirect_uri=""
client_id=""
client_secret=""
target_claim="email"

echo "Content-Type: text/html"
echo ""

# load small-shell path
. ../descriptor/.small_shell_path

# required
IP_whitelisting=%%IP_whitelisting

# IP restriction check
if [ "$IP_whitelisting" = "yes" ];then

  whitelist_chk=`${small_shell_path}/bin/meta get.IP | grep -v "NO IP RESTRICTION"`
  if [ "$whitelist_chk" ];then
    for IP in $whitelist_chk
    do
      IP=`echo $IP | sed "s/*//g"`
      if [[ ${REMOTE_ADDR} == ${IP}* ]];then
        IP_chk_flag=yes
        break
      fi
    done

    if [ ! "$IP_chk_flag" = "yes" ];then
      echo "error: your IP{$REMOTE_ADDR} is not allowed to access"
      exit 1
    fi
  fi
fi

param=`date +%s`
param="$param:$RANDOM"
count=1

while [ -f ../tmp/${param} ]
do
 sleep 0.01
 count=`expr $count + 1`
 if [ $count -eq 100 ];then
   echo "error: please contact to adimin"
   exit 1
 fi
done

# parse QUERY STRING
echo $QUERY_STRING | php -r "echo urldecode(file_get_contents('php://stdin'));" | tr -d \$ | tr -d \` | sed "s/\&/\n/g" > ../tmp/${param}

# parse POST param
echo $input | sed "s/\`//g" | sed "s/&/\n/g"  | sed -r "s/oauth_test_user(.*)=/oauth_test_user=/g" \
| php -r "echo urldecode(file_get_contents('php://stdin'));"  >> ../tmp/${param}
cat ../tmp/${param} | sed -e "s/=/=\"/1" | sed "s/$/\"/g" | sed "s/^\"//g" | tr -d \$ | tr -d \` > ../tmp/${param}.load

chmod 755 ../tmp/${param}.load

# load query string
.  ../tmp/${param}.load
rm  ../tmp/${param}*


# render login button if thre is no step in log for audit matter
if [ ! "$code" ];then

  # regenerate  query string
  if [ "$req" ];then
    req="?req=`echo $req`"
  fi

  if [ "$id" ];then
    id="\&id=`echo $id`"
  fi

  if [ "$message" ];then
    message="<p><b>`echo $message`<\/b><\/p>"
  fi

  # render standard login form with queyr string and messge
  cat ../descriptor/oauth_test_auth_form.html.def | sed "s/^ *</</g"\
  | sed "/%%auth_form_menu/r ../descriptor/common_parts/oauth_test_auth_form_menu" \
  | sed "s/%%auth_form_menu//g"\
  | sed "/%%footer/r ../descriptor/common_parts/oauth_test_footer" \
  | sed "/%%footer/d"\
  | sed "s/%%message/${message}/g" \
  | sed "s/?%%params/${req}${id}/g"
  exit 0
fi

# Oauth user check & login to the APP
if [ "$code" ];then
  urlencoded_redirect_uri=`echo -n "$redirect_uri" | php -r "echo urlencode(file_get_contents('php://stdin'));"`
  base64key=`echo -n "$client_id:$client_secret" | base64 -w 0`

  res=`curl --request POST \
  --url $exchange_token_uri \
  --header "Content-type: application/x-www-form-urlencoded" \
  --data "grant_type=authorization_code&redirect_uri=${urlencoded_redirect_uri}&code=${code}&client_id=${client_id}&client_secret=${client_secret}"`
  access_token=`echo "$res" | jq .access_token | sed "s/\"//g"`

  res=`curl -X GET \
  -H "Authorization: Bearer ${access_token}" \
  "$user_info_req_uri"`
  user=`echo "$res" | jq .${target_claim} | sed "s/\"//g"`

  if [ "$access_token" -a "$user" -a ! "$user" = "null" ];then
    user=`echo $user | awk -F"@" '{print $1}'`
    auth_req=`sudo -u small-shell ${small_shell_path}/bin/extension_auth app:oauth_test key_auth:${authkey} force_user:${user} remote_addr:${REMOTE_ADDR}`
    session=`echo $auth_req | awk -F "," '{print $2}' | awk -F ":" '{print $2}'`
    pin=`echo $auth_req | awk -F "," '{print $3}' | awk -F ":" '{print $2}'`
   
    if [ "$session" -a "$pin" ];then
      if [ ! "$req" ];then
        req=main
      fi

      # redirect to APP if key auth is OK
      if [[ $req == *table ]];then
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./oauth_test?session=$session&pin=$pin&req=$req\">"
      elif [[ $req == *get ]];then
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./oauth_test?session=$session&pin=$pin&req=$req&id=$id\">"
      else
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./oauth_test?session=$session&pin=$pin&req=$req\">"
      fi
    fi
  else
    echo "authentication faied"
    echo "$access_token:$user"
  fi
fi

